<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/..\FrameXML\UI.xsd">

    <!--
        Vendor.OptionsPanel.Template
            Base optional panel template, this includes the title and help text, along with a version
            anchored to the lower right
    -->
    <Frame name="Vendor.OptionsPanel.Template" virtual="true">
        <Layers>
            <Layer level="BACKGROUND">
                <FontString inherits="GameFontDisableTiny" justifyH="RIGHT" justifyV="BOTTOM" parentKey="VersionInfo">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" x="10" y="30"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-10" y="8"/>
                    </Anchors>
                </FontString>
            </Layer>
            <Layer level="ARTWORK">
                <FontString name="$parent.Title" parentKey="Title" inherits="GameFontNormalHuge" JustifyV="TOP" JustifyH="LEFT">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="16" y="-16"/>
                        <Anchor point="BOTTOMRIGHT" x="-16" y="-32" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </FontString>
            </Layer>
            <Layer level="ARTWORK">
                <FontString name="$parent.HelpText" parentKey="HelpText" inherits="GameFontHighlight" JustifyV="TOP" JustifyH="LEFT">
                    <Size x="10" y="60"/>
                    <Anchors>
                        <Anchor point="TOPLEFT" relativeTo="$parent.Title" relativePoint="BOTTOMLEFT" x="0" y="-12"/>
                        <Anchor point="TOPRIGHT" relativeTo="$parent.Title" relativePoint="BOTTOMRIGHT" x="0" y="-12"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
    </Frame>

    <!--
        Vendor.Options.SliderTemplate
            Template used for a slider (value contained to range) this contains the label, instructional text,
            slider which includes max/min and value text
    -->
    <Frame name="Vendor.Options.SliderTemplate" virtual="true">
        <Layers>
            <Layer level="ARTWORK">
                <FontString parentKey="Label" inherits="GameFontHighlightLarge" justifyH="LEFT" JustifyV="CENTER">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="0" y="0"/>
                        <Anchor point="BOTTOMRIGHT" x="0" y="-20" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </FontString>
                <FontString name="$parent.Text" parentKey="Text" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="TOP">
                    <Anchors>
                        <Anchor point="TOPLEFT"  x="32" y="-24"/>
                        <Anchor point="BOTTOMRIGHT" x="0" y="20"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="DisplayValue" inherits="GameFontGreen" justifyH="CENTER" justifyV="TOP">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" x="32" y="12"/>
                        <Anchor point="BOTTOMRIGHT" x="-32" y="0"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="Max" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="CENTER" text="2.0">
                    <Size x="48" y="16"/>
                    <Color r="0.8" g="0.8" b="0.8"/>
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMRIGHT" x="-60" y="30"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="Min" inherits="GameFontNormalSmall" justifyH="RIGHT" justifyV="CENTER" text="0.0">
                    <Color r="0.8" g="0.8" b="0.8"/>
                    <Size x="48" y="16"/>
                    <Anchors>
                        <Anchor point="TOPRIGHT" relativePoint="BOTTOMLEFT" x="60" y="30"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <Slider name="$parent.Value" parentKey="Value"  obeyStepOnDrag="true" enableMouse="true" orientation="HORIZONTAL">
                <Size x="10" y="16"/>
                <HitRectInsets>
                    <AbsInset left="0" right="0" top="-10" bottom="-10"/>
                </HitRectInsets>
                <Backdrop bgFile="Interface\Buttons\UI-SliderBar-Background" edgeFile="Interface\Buttons\UI-SliderBar-Border" tile="true">
                    <EdgeSize>
                        <AbsValue val="8"/>
                    </EdgeSize>
                    <TileSize>
                        <AbsValue val="8"/>
                    </TileSize>
                    <BackgroundInsets>
                        <AbsInset left="3" right="3" top="6" bottom="6"/>
                    </BackgroundInsets>
                </Backdrop>
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" x="72" y="30"/>
                    <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-72" y="14"/>
                </Anchors>
                <Scripts>
                    <OnValueChanged>Vendor.ConfigPanel.OnSliderValueChange(self)</OnValueChanged>
                </Scripts>
                <ThumbTexture name="$parentThumb" file="Interface\Buttons\UI-SliderBar-Button-Horizontal">
                    <Size x="32" y="32"/>
                </ThumbTexture>
            </Slider>
        </Frames>
    </Frame>

    <!--
        Vendor.Options.SmallSlider.Template
            Template used for a slider (value contained to range) this contains the label, instructional text,
            slider which includes max/min and value text, this is a smaller version of the slider
    -->
    <Frame name="Vendor.Options.SmallSlider.Template" virtual="true">
        <Layers>
            <Layer level="ARTWORK">
                <FontString parentKey="Label" inherits="GameFontHighlight" justifyH="LEFT" JustifyV="CENTER">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="0" y="0"/>
                        <Anchor point="BOTTOMRIGHT" x="0" y="-20" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </FontString>
                <FontString name="$parent.Text" parentKey="Text" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="TOP">
                    <Anchors>
                        <Anchor point="TOPLEFT"  x="0" y="-18"/>
                        <Anchor point="BOTTOMRIGHT" x="0" y="20"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="DisplayValue" inherits="GameFontGreen" justifyH="CENTER" justifyV="TOP">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" x="32" y="12"/>
                        <Anchor point="BOTTOMRIGHT" x="-32" y="0"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="Max" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="CENTER" text="2.0">
                    <Size x="48" y="16"/>
                    <Color r="0.8" g="0.8" b="0.8"/>
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMRIGHT" x="-60" y="30"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="Min" inherits="GameFontNormalSmall" justifyH="RIGHT" justifyV="CENTER" text="0.0">
                    <Color r="0.8" g="0.8" b="0.8"/>
                    <Size x="48" y="16"/>
                    <Anchors>
                        <Anchor point="TOPRIGHT" relativePoint="BOTTOMLEFT" x="60" y="30"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <Slider name="$parent.Value" parentKey="Value"  obeyStepOnDrag="true" enableMouse="true" orientation="HORIZONTAL">
                <Size x="10" y="16"/>
                <HitRectInsets>
                    <AbsInset left="0" right="0" top="-10" bottom="-10"/>
                </HitRectInsets>
                <Backdrop bgFile="Interface\Buttons\UI-SliderBar-Background" edgeFile="Interface\Buttons\UI-SliderBar-Border" tile="true">
                    <EdgeSize>
                        <AbsValue val="8"/>
                    </EdgeSize>
                    <TileSize>
                        <AbsValue val="8"/>
                    </TileSize>
                    <BackgroundInsets>
                        <AbsInset left="3" right="3" top="6" bottom="6"/>
                    </BackgroundInsets>
                </Backdrop>
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" x="72" y="30"/>
                    <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-72" y="14"/>
                </Anchors>
                <Scripts>
                    <OnValueChanged>Vendor.ConfigPanel.OnSliderValueChange(self)</OnValueChanged>
                </Scripts>
                <ThumbTexture name="$parentThumb" file="Interface\Buttons\UI-SliderBar-Button-Horizontal">
                    <Size x="32" y="32"/>
                </ThumbTexture>
            </Slider>
        </Frames>
    </Frame>

    <!--
        Vendor.Options.CheckTemplate
            Standard toggle option template, includes checkbox, label and instructional text
    -->
    <Frame name="Vendor.Options.CheckTemplate" virtual="true">
        <Layers>
            <Layer level="ARTWORK">
                <FontString parentKey="Label" inherits="GameFontHighlightLarge" justifyH="LEFT" JustifyV="CENTER">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="28" y="0"/>>
                        <Anchor point="BOTTOMRIGHT" x="0" y="-20" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="Text" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="TOP">
                    <Anchors>
                        <Anchor point="TOPLEFT"  x="28" y="-24"/>
                        <Anchor point="BOTTOMRIGHT" x="0" y="0"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <CheckButton parentKey="State" inherits="OptionsBaseCheckButtonTemplate">
                <Size x="24" y="24"/>
                <Anchors>
                    <Anchor point="TOPLEFT" x="0" y="0"/>
                </Anchors>
                <Scripts>
                    <OnClick>Vendor.ConfigPanel.OnCheckboxChange(self)</OnClick>
                    <OnEnable>
                        self:GetParent().Label:SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b)
                        self:GetParent().Text:SetTextColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b)
                    </OnEnable>
                    <OnDisable>
                        self:GetParent().Label:SetTextColor(DISABLED_FONT_COLOR.r, DISABLED_FONT_COLOR.g, DISABLED_FONT_COLOR.b)
                        self:GetParent().Text:SetTextColor(DISABLED_FONT_COLOR.r, DISABLED_FONT_COLOR.g, DISABLED_FONT_COLOR.b)
                    </OnDisable>
                </Scripts>
            </CheckButton>
        </Frames>
    </Frame>

    <!--
        Vendor.Options.SmallCheckTemplate.WithText
            This template is a smaller version of the check template, which contains both a label
            and also the description text. are rendered in the normal font color to indicate
            that it's a secondary option.
    -->
    <Frame name="Vendor.Options.SmallCheckTemplate.WithText" virtual="true">
        <Layers>
            <Layer level="ARTWORK">
                <FontString parentKey="Label" inherits="GameFontHighlight" justifyH="LEFT" JustifyV="CENTER">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="20" y="0"/>>
                        <Anchor point="BOTTOMRIGHT" x="0" y="-16" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </FontString>
                <FontString parentKey="Text" inherits="GameFontNormalSmall" justifyH="LEFT" justifyV="TOP">
                    <Anchors>
                        <Anchor point="TOPLEFT"  x="20" y="-20"/>
                        <Anchor point="BOTTOMRIGHT" x="0" y="0"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <CheckButton parentKey="State" inherits="OptionsBaseCheckButtonTemplate">
                <Size x="16" y="16"/>
                <Anchors>
                    <Anchor point="TOPLEFT" x="0" y="0"/>
                </Anchors>
                <Scripts>
                    <OnClick>Vendor.ConfigPanel.OnCheckboxChange(self)</OnClick>
                    <OnEnable>
                        self:GetParent().Label:SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b)
                        self:GetParent().Text:SetTextColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b)
                    </OnEnable>
                    <OnDisable>
                        self:GetParent().Label:SetTextColor(DISABLED_FONT_COLOR.r, DISABLED_FONT_COLOR.g, DISABLED_FONT_COLOR.b)
                        self:GetParent().Text:SetTextColor(DISABLED_FONT_COLOR.r, DISABLED_FONT_COLOR.g, DISABLED_FONT_COLOR.b)
                    </OnDisable>
                </Scripts>
            </CheckButton>
        </Frames>
    </Frame>

    <!--
        Vendor.Options.SmallCheckTemplate
            This template is a smaller version of the check template, which contains only a label in the
            normal font color. We use this for secondary options which don't need additional display text
    -->
    <Frame name="Vendor.Options.SmallCheckTemplate" virtual="true">
        <Layers>
            <Layer level="ARTWORK">
                <FontString parentKey="Label" inherits="GameFontHighlight" justifyH="LEFT" JustifyV="CENTER">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="20" y="0"/>>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT" x="0" y="-16"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <CheckButton parentKey="State" inherits="OptionsBaseCheckButtonTemplate">
                <Size x="16" y="16"/>
                <Anchors>
                    <Anchor point="TOPLEFT" x="0" y="0"/>
                </Anchors>
                <Scripts>
                    <OnClick>Vendor.ConfigPanel.OnCheckboxChange(self)</OnClick>
                    <OnEnable>
                        self:GetParent().Label:SetTextColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b)
                    </OnEnable>
                    <OnDisable>
                        self:GetParent().Label:SetTextColor(DISABLED_FONT_COLOR.r, DISABLED_FONT_COLOR.g, DISABLED_FONT_COLOR.b)
                    </OnDisable>
                </Scripts>
            </CheckButton>
        </Frames>
    </Frame>

    <!--
        VendorGeneralConfigPanel
            This is the main config panel for vendor, this contains the options that most likely
            will need to be changed.
    -->
    <Frame name="VendorGeneralConfigPanel" hidden="true" parent="UIParent" inherits="Vendor.OptionsPanel.Template">
        <Frames>

            <!-- Auto sell settings -->
            <Frame name="$parent.AutoSell" parentKey="AutoSell" inherits="Vendor.Options.CheckTemplate">
                <Size x="250" y="54"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.HelpText" relativePoint="BOTTOMLEFT" x="16" y="-24"/>
                    <Anchor point="RIGHT" x="-16" />
                </Anchors>
            </Frame>
            <Frame name="$parent.EnableBuyback" parentKey="enableBuyback" inherits="Vendor.Options.CheckTemplate">
                <Size x="250" y="54"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.AutoSell" relativePoint="BOTTOMLEFT" x="0" y="0"/>
                    <Anchor point="RIGHT" x="-16" />
                </Anchors>
            </Frame>

            <!-- Tooltip seetings -->
            <Frame name="$parent.Tooltip" parentKey="Tooltip" inherits="Vendor.Options.CheckTemplate">
                <Size x="250" y="54"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.EnableBuyback" relativePoint="BOTTOMLEFT" x="0" y="0"/>
                    <Anchor point="RIGHT" x="-16" />
                </Anchors>
            </Frame>
            <Frame name="$parent.ToolTipRule" parentKey="TooltipRule" inherits="Vendor.Options.SmallCheckTemplate.WithText">
                <Size x="250" y="54"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.Tooltip" relativePoint="BOTTOMLEFT" x="32" y="0"/>
                    <Anchor point="RIGHT" x="-16" />
                </Anchors>
            </Frame>

            <!-- Open rules / bindings buttons -->
            <Button name="$parent.OpenRulesDialog" parentKey="OpenRules" inherits="UIPanelButtonTemplate">
                <Size x="172" y="28"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.Tooltip" relativePoint="BOTTOMLEFT" x="0" y="-68"/>
                </Anchors>
                <Scripts>
                    <OnClick>
                        Vendor.ConfigPanel.General.OnOpenRules()
                        InterfaceOptionsFrame_Show()
                    </OnClick>
                </Scripts>
            </Button>
            <Button name="$parent.OpenBindings" parentKey="OpenBindings" inherits="UIPanelButtonTemplate">
                <Size x="172" y="28"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.OpenRulesDialog" relativePoint="TOPRIGHT" x="12" y="0"/>
                </Anchors>
                <Scripts>
                    <OnClick>
                        Vendor.ConfigPanel.General.OpenBindings()
                        InterfaceOptionsFrame_Show()
                    </OnClick>
                </Scripts>
            </Button>
        </Frames>
        <Scripts>
            <OnLoad>
                Vendor.ConfigPanel.SetVersionInfo(self)
                Vendor.ConfigPanel.General.Init(self)
                Vendor.ConfigPanel.InitMainPanel(self)
            </OnLoad>
        </Scripts>
    </Frame>

    <!--
        VendorRepairConfigPanel
            Panel which contains options for repair.
    -->
    <Frame name="VendorRepairConfigPanel" hidden="true" parent="UIParent" inherits="Vendor.OptionsPanel.Template">
        <Frames>
            <Frame name="$parent.AutoRepair" parentKey="AutoRepair" inherits="Vendor.Options.CheckTemplate">
                <Size x="250" y="54"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.HelpText" relativePoint="BOTTOMLEFT" x="16" y="-24"/>
                    <Anchor point="RIGHT" x="-16" />
                </Anchors>
            </Frame>
            <Frame name="$parent.GuildRepair" parentKey="GuildRepair" inherits="Vendor.Options.SmallCheckTemplate.WithText">
                <Size x="250" y="48"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.AutoRepair" relativePoint="BOTTOMLEFT" x="32" y="0"/>
                    <Anchor point="RIGHT" x="-16" />
                </Anchors>
            </Frame>
        </Frames>
        <Scripts>
            <OnLoad>
                Vendor.ConfigPanel.SetVersionInfo(self)
                Vendor.ConfigPanel.Repair.Init(self)
                Vendor.ConfigPanel.InitChildPanel(self)
            </OnLoad>
        </Scripts>
    </Frame>

    <!--
        VendorPerfConfigPanel
            Contains the settings which affect the resources / performance
    -->
    <Frame name="VendorPerfConfigPanel" hidden="true" parent="UIParent" inherits="Vendor.OptionsPanel.Template">
        <Frames>
            <Frame name="$parent.SellThrottle" parentKey="SellThrottle" inherits="Vendor.Options.SliderTemplate">
                <Size x="10" y="80"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.HelpText" relativePoint="BOTTOMLEFT" x="16" y="-24"/>
                    <Anchor point="RIGHT" x="-16" />
                </Anchors>
            </Frame>
            <Frame name="$parent.TimeThrottle" parentKey="TimeThrottle" inherits="Vendor.Options.SliderTemplate">
                <Size x="10" y="80"/>
                <Anchors>
                    <Anchor point="TOPLEFT" relativeTo="$parent.SellThrottle" relativePoint="BOTTOMLEFT" x="0" y="-6"/>
                    <Anchor point="TOPRIGHT" relativeTo="$parent.SellThrottle" relativePoint="BOTTOMRIGHT" x="0" y="-6"/>
                </Anchors>
            </Frame>
        </Frames>
        <Scripts>
            <OnLoad>
                Vendor.ConfigPanel.SetVersionInfo(self)
                Vendor.ConfigPanel.Perf.Init(self)
                Vendor.ConfigPanel.InitChildPanel(self)
            </OnLoad>
        </Scripts>
    </Frame>

    

</Ui>

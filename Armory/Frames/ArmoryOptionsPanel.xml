<!-- Revision: 523 2012-09-16T22:59:10Z -->
<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
..\..\..\FrameXML\UI.xsd">
  <Script file="ArmoryOptionsPanel.lua"/>
  <CheckButton name="ArmoryOptionsCheckButtonTemplate" virtual="true" inherits="InterfaceOptionsCheckButtonTemplate">
    <Scripts>
      <OnClick>
        if ( self:GetChecked() ) then
          PlaySound("igMainMenuOptionCheckBoxOn");
        else
          PlaySound("igMainMenuOptionCheckBoxOff");
        end
        ArmoryOptionsPanel_CheckButton_OnClick(self);
      </OnClick>
    </Scripts>
  </CheckButton>
  <CheckButton name="ArmoryOptionsWideCheckButtonTemplate" virtual="true" inherits="ArmoryOptionsCheckButtonTemplate">
    <HitRectInsets>
      <AbsInset left="0" right="-300" top="0" bottom="0"/>
    </HitRectInsets>
  </CheckButton>
  <Frame name="ArmoryOptionsCheckBoxWithSwatchTemplate" virtual="true">
    <Size>
      <AbsDimension x="385" y="26"/>
    </Size>
    <Layers>
      <Layer level="BACKGROUND">
        <FontString name="$parentText" text="ARMORY_FONT_COLOR" inherits="GameFontNormal">
          <Anchors>
            <Anchor point="RIGHT">
              <Offset x="-20" y="1"/>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Frames>
      <CheckButton name="$parentCheck" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="LEFT">
            <Offset x="0" y="0"/>
          </Anchor>
        </Anchors>
      </CheckButton>
      <Button name="$parentColorSwatch" hidden="false">
        <Size>
          <AbsDimension x="16" y="16"/>
        </Size>
        <Anchors>
          <Anchor point="RIGHT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Layers>
          <Layer level="BACKGROUND">
            <Texture name="$parentSwatchBg">
              <Size>
                <AbsDimension x="14" y="14"/>
              </Size>
              <Anchors>
                <Anchor point="CENTER">
                  <Offset>
                    <AbsDimension x="0" y="0"/>
                  </Offset>
                </Anchor>
              </Anchors>
              <Color r="1.0" g="1.0" b="1.0"/>
            </Texture>
          </Layer>
        </Layers>
        <Scripts>
          <OnClick>
            ArmoryOptionsPanel_OpenColorPicker(self);
          </OnClick>
        </Scripts>
        <NormalTexture name="$parentNormalTexture" file="Interface\ChatFrame\ChatFrameColorSwatch"/>
      </Button>
    </Frames>
  </Frame>
  <Button name="ArmoryOptionsPanelButtonTemplate" inherits="UIPanelButtonTemplate" virtual="true">
    <Scripts>
      <OnEnter>
        if ( self.tooltipText ) then
          GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
          GameTooltip:SetText(self.tooltipText, nil, nil, nil, nil, 1);
        end
        if ( self.tooltipRequirement ) then
          GameTooltip:AddLine(self.tooltipRequirement, "", 1.0, 1.0, 1.0);
          GameTooltip:Show();
        end
      </OnEnter>
      <OnLeave>
        GameTooltip:Hide();
      </OnLeave>
    </Scripts>
  </Button>
  <Slider name="ArmoryOptionsPanelSliderTemplate" inherits="OptionsSliderTemplate" virtual="true">
    <Scripts>
      <OnValueChanged>
        self.value = value; 
        self.setFunc(value);
      </OnValueChanged>
    </Scripts>
  </Slider>
  
  <Frame name="ArmoryOptionsPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText" text="ARMORY_SUBTEXT" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <CheckButton name="$parentEnable" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_ENABLED";
            self.onOkay = ArmoryOptionsPanel_EnableCharacter;
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSearchAll" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentEnable" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SEARCHALL";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentLastViewed" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSearchAll" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_LASTVIEWED";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentPerCharacter" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentLastViewed" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_PERCHARACTER";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShowAltEquip" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentPerCharacter" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWALTEQUIP";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShowUnequip" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowAltEquip" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWUNEQUIP";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsPanelShowAltEquip, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShowEqcTooltips" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowUnequip" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-16" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWEQCTOOLTIPS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentPauseInCombat" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowEqcTooltips" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_PAUSEINCOMBAT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentPauseInInstance" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentPauseInCombat" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_PAUSEININSTANCE";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsPanelPauseInCombat, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentScanOnEnter" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentPauseInInstance" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-16" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SCANONENTER";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentFactionFilter" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentScanOnEnter" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_USEFACTIONFILTER";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Button name="$parentResetScreen" inherits="ArmoryOptionsPanelButtonTemplate" text="ARMORY_CMD_RESET_FRAME_MENUTEXT">
        <Size>
          <AbsDimension x="175" y="25"/>
        </Size>
        <Anchors>
          <Anchor point="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="16"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.tooltipText = Armory:Proper(ARMORY_CMD_RESET_FRAME_TEXT);
          </OnLoad>
          <OnClick>
            PlaySound("gsTitleOptionOK");
            Armory:Reset(ARMORY_CMD_RESET_FRAME, true);
          </OnClick>
        </Scripts>
        <NormalFont style="GameFontNormalSmall"/>
        <HighlightFont style="GameFontHighlightSmall"/>
      </Button>
      <Slider name="$parentScaleSlider" inherits="ArmoryOptionsPanelSliderTemplate">
        <Anchors>
          <Anchor point="LEFT" relativeTo="$parentResetScreen" relativePoint="RIGHT">
            <Offset>
              <AbsDimension x="50" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_SLIDER;
            self.label = "ARMORY_CMD_SET_UISCALE";
            _G[self:GetName().."Text"]:SetText(UI_SCALE);
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
          <OnShow>
            _G[self:GetName().."Low"]:SetText(tostring(self.minValue));
            _G[self:GetName().."High"]:SetText(tostring(self.maxValue));
          </OnShow>
          <OnValueChanged>
            self.value = value;
            self.setFunc(value);
          </OnValueChanged>
        </Scripts>
      </Slider>
    </Frames>
  </Frame>
  
  <Frame name="ArmoryOptionsMinimapPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_MINIMAP_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText" text="ARMORY_MINIMAP_SUBTEXT" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_MINIMAP_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryMinimapButton:Show();
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
      <OnHide>
        ArmoryMinimapButton_Init();
      </OnHide>
    </Scripts>
    <Frames>
      <CheckButton name="$parentMinimapButton" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWMINIMAP";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentGlobalMinimapButton" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentMinimapButton" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWMMGLOBAL";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentHideIfToolbar" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentGlobalMinimapButton" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_HIDEMMTOOLBAR";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsMinimapPanelMinimapButton, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Slider name="$parentAngleSlider" inherits="ArmoryOptionsPanelSliderTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentHideIfToolbar" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="10" y="-25"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_SLIDER;
            self.label = "ARMORY_CMD_SET_MMB_ANGLE";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsMinimapPanelMinimapButton, self);
          </OnLoad>
          <OnShow>
            _G[self:GetName().."Low"]:SetText("");
            _G[self:GetName().."High"]:SetText("");
          </OnShow>
          <OnValueChanged>
            self.value = value;
            self.setFunc(value);
            ArmoryMinimapButton_Move();
          </OnValueChanged>
        </Scripts>
      </Slider>
      <Slider name="$parentRadiusSlider" inherits="ArmoryOptionsPanelSliderTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentAngleSlider" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-25"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_SLIDER;
            self.label = "ARMORY_CMD_SET_MMB_RADIUS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsMinimapPanelMinimapButton, self);
          </OnLoad>
          <OnShow>
            _G[self:GetName().."Low"]:SetText("");
            _G[self:GetName().."High"]:SetText("");
          </OnShow>
          <OnValueChanged>
            self.value = value;
            self.setFunc(value);
            ArmoryMinimapButton_Move();
          </OnValueChanged>
        </Scripts>
      </Slider>
    </Frames>
  </Frame>
  
  <Frame name="ArmoryOptionsModulePanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_MODULES_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText" text="ARMORY_MODULES_SUBTEXT" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_MODULES_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <CheckButton name="$parentInventory" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = INVENTORY_TOOLTIP;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:HasInventory(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:HasInventory(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Inventory"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentQuestLog" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentInventory" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = QUESTLOG_BUTTON;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:HasQuestLog(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:HasQuestLog(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "QuestLog"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSpellBook" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentQuestLog" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = SPELLBOOK_BUTTON;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:HasSpellBook(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:HasSpellBook(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "SpellBook"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentTradeSkills" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSpellBook" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = TRADE_SKILLS;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:HasTradeSkills(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:HasTradeSkills(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "TradeSkills"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSocial" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentTradeSkills" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = SOCIAL_LABEL;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:HasSocial(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:HasSocial(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Social"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSharing" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSocial" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = ARMORY_SHARE_TITLE;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:HasDataSharing(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:HasDataSharing(value); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>

      <CheckButton name="$parentPets" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="200" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = PETS;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:PetsEnabled(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:PetsEnabled(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Pets"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentTalents" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentPets" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = TALENTS;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:TalentsEnabled(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:TalentsEnabled(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Talents"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentPVP" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentTalents" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = PVP;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:PVPEnabled(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:PVPEnabled(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "PVP"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentReputation" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentPVP" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = REPUTATION;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:ReputationEnabled(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:ReputationEnabled(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Reputation"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentRaid" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentReputation" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = RAID;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:RaidEnabled(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:RaidEnabled(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Raid"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentCurrency" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentRaid" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = CURRENCY;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:CurrencyEnabled(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:CurrencyEnabled(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Currency"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentBuffs" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="400" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = BUFFOPTIONS_LABEL;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:BuffsEnabled(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:BuffsEnabled(value); end
            self.onOkay = function(self) ArmoryOptionsPanel_CheckModule(self, "Buffs"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
    </Frames>
  </Frame>
  
  <Frame name="ArmoryOptionsSharePanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_SHARE_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText1" text="ARMORY_SHARE_SUBTEXT1" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText2" text="ARMORY_SHARE_SUBTEXT2" inherits="GameFontHighlightSmall" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="18" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentSubText1" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-170"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_SHARE_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <CheckButton name="$parentShareProfessions" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText1" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHARESKILLS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShareQuests" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareProfessions" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHAREQUESTS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShareCharacter" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareQuests" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHARECHARACTER";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShareItems" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareCharacter" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHAREITEMS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShareAsAlt" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareItems" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHAREALT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Frame name="$parentChannel">
        <Size>
          <AbsDimension x="385" y="26"/>
        </Size>
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareAsAlt" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Frames>
          <CheckButton name="$parentCheck" inherits="ArmoryOptionsCheckButtonTemplate">
            <Anchors>
              <Anchor point="LEFT">
                <Offset x="0" y="0"/>
              </Anchor>
            </Anchors>
          </CheckButton>
          <EditBox name="$parentName" autoFocus="false" historyLines="0" inherits="InputBoxTemplate">
            <Size>
              <AbsDimension x="150" y="20"/>
            </Size>
            <Anchors>
              <Anchor point="RIGHT">
                <Offset>
                  <AbsDimension x="-5" y="0"/>
                </Offset>
              </Anchor>
            </Anchors>
            <Scripts>
              <OnLoad>
                self:SetMaxLetters(31 - strlen(ARMORY_ID));
              </OnLoad>
              <OnShow>
                local _, name = Armory:GetConfigChannelName();
                self.value = self.value or name;
                self.init = true;
                self:SetText(self.value or ADD_CHANNEL);
                self:SetCursorPosition(0);
                self:ClearFocus();
              </OnShow>
              <OnTextChanged>
                if ( self:GetText() == "" ) then
                  self.value = nil;
                elseif ( self:GetText() ~= ADD_CHANNEL ) then
                  self.value = self:GetText();
                end
              </OnTextChanged>
              <OnEditFocusLost>
                self:HighlightText(0, 0);
                if ( self:GetText() == "" ) then
                  self:SetText(ADD_CHANNEL);
                end
              </OnEditFocusLost>
              <OnEditFocusGained>
                self:HighlightText();
                if ( self:GetText() == ADD_CHANNEL ) then
                  self:SetText("");
                end
              </OnEditFocusGained>
            </Scripts>
          </EditBox>
        </Frames>
        <Scripts>
          <OnLoad>
            local control = _G[self:GetName().."Check"];
            local editbox = _G[self:GetName().."Name"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHARECHANNEL";
            control.onOkay = function() if ( editbox.init ) then ArmoryOptionsPanel_SetChannel(editbox.value); end end
            control.onCancel = function() _, editbox.value = Armory:GetConfigChannelName(); end
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
            -- Do it here because ShareItems is defined first
            ArmoryOptionsPanel_SetupDependentControl(control, ArmoryOptionsSharePanelShareItems);
          </OnLoad>
        </Scripts>
      </Frame>
      <CheckButton name="$parentShareInInstance" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText2" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHAREININSTANCE";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShareInCombat" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareInInstance" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHAREINCOMBAT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShowShareMessages" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareInCombat" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWSHAREMSG";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShareAll" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowShareMessages" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHAREALL";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShareGuild" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShareAll" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHAREGUILD";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSharePanelShareAll, self, true);
          </OnLoad>
        </Scripts>
      </CheckButton>
    </Frames>
  </Frame>
  
  <Frame name="ArmoryOptionsTooltipPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_TOOLTIP_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText" text="ARMORY_TOOLTIP_SUBTEXT" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_TOOLTIP_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <Frame name="$parentShowItemCount" inherits="ArmoryOptionsCheckBoxWithSwatchTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            local control = _G[self:GetName().."Check"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHOWITEMCOUNT";
            control.colorSet = function(r, g, b) Armory:SetConfigItemCountColor(r, g, b); end;
            control.colorGet = function(default) return Armory:GetConfigItemCountColor(default); end;
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
          </OnLoad>
        </Scripts>
      </Frame>
      <CheckButton name="$parentShowItemCountTotals" inherits="ArmoryOptionsCheckBoxWithSwatchTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowItemCount" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self:SetWidth(self:GetWidth() - 16);
            local control = _G[self:GetName().."Check"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHOWCOUNTTOTAL";
            control.colorSet = function(r, g, b) Armory:SetConfigItemCountTotalsColor(r, g, b); end;
            control.colorGet = function(default) return Armory:GetConfigItemCountTotalsColor(default); end;
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsTooltipPanelShowItemCountCheck, control);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentGlobalItemCount" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowItemCountTotals" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_COUNTALL";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsTooltipPanelShowItemCountCheck, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentCrossFactionItemCount" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentGlobalItemCount" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_COUNTXFACTION";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsTooltipPanelShowItemCountCheck, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Frame name="$parentShowKnownBy" inherits="ArmoryOptionsCheckBoxWithSwatchTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentCrossFactionItemCount" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-16" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            local control = _G[self:GetName().."Check"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHOWKNOWNBY";
            control.colorSet = function(r, g, b) Armory:SetConfigKnownColor(r, g, b); end;
            control.colorGet = function(default) return Armory:GetConfigKnownColor(default); end;
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
          </OnLoad>
        </Scripts>
      </Frame>
      <Frame name="$parentShowHasSkill" inherits="ArmoryOptionsCheckBoxWithSwatchTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowKnownBy" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            local control = _G[self:GetName().."Check"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHOWHASSKILL";
            control.colorSet = function(r, g, b) Armory:SetConfigHasSkillColor(r, g, b); end;
            control.colorGet = function(default) return Armory:GetConfigHasSkillColor(default); end;
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
          </OnLoad>
        </Scripts>
      </Frame>
      <Frame name="$parentShowCanLearn" inherits="ArmoryOptionsCheckBoxWithSwatchTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowHasSkill" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            local control = _G[self:GetName().."Check"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHOWCANLEARN";
            control.colorSet = function(r, g, b) Armory:SetConfigCanLearnColor(r, g, b); end;
            control.colorGet = function(default) return Armory:GetConfigCanLearnColor(default); end;
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
          </OnLoad>
        </Scripts>
      </Frame>
      <Frame name="$parentShowCrafters" inherits="ArmoryOptionsCheckBoxWithSwatchTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowCanLearn" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            local control = _G[self:GetName().."Check"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHOWCRAFTERS";
            control.colorSet = function(r, g, b) Armory:SetConfigCraftersColor(r, g, b); end;
            control.colorGet = function(default) return Armory:GetConfigCraftersColor(default); end;
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
          </OnLoad>
        </Scripts>
      </Frame>
      <Frame name="$parentShowQuestAlts" inherits="ArmoryOptionsCheckBoxWithSwatchTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowCrafters" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            local control = _G[self:GetName().."Check"];
            control.type = CONTROLTYPE_CHECKBOX;
            control.label = "ARMORY_CMD_SET_SHOWQUESTALTS";
            control.colorSet = function(r, g, b) Armory:SetConfigQuestAltsColor(r, g, b); end;
            control.colorGet = function(default) return Armory:GetConfigQuestAltsColor(default); end;
            ArmoryOptionsPanel_RegisterControl(control, self:GetParent());
          </OnLoad>
        </Scripts>
      </Frame>
      <CheckButton name="$parentShowGearSets" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowQuestAlts" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWGEARSETS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentShowGems" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentShowGearSets" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="0"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWGEMS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>

    </Frames>
  </Frame>
  
  <Frame name="ArmoryOptionsFindPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_FIND_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText" text="ARMORY_FIND_SUBTEXT" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_FIND_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <CheckButton name="$parentSearchWindow" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_WINDOWSEARCH";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSearchRealms" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSearchWindow" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_GLOBALSEARCH";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSearchExtended" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSearchRealms" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_EXTENDEDSEARCH";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSearchRestrictive" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSearchExtended" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_RESTRICTIVESEARCH";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSearchAltClick" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSearchRestrictive" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_ALTCLICKSEARCH";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Frame name="$parentDefaultSearchTypeDropDown" inherits="ArmoryDropDownMenuTemplate" enableMouse="true">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSearchAltClick" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-13" y="-24"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Layers>
          <Layer level="BACKGROUND">
            <FontString name="$parentLabel" inherits="GameFontHighlight">
              <Anchors>
                <Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT">
                  <Offset>
                    <AbsDimension x="16" y="3"/>
                  </Offset>
                </Anchor>
              </Anchors>
            </FontString>
          </Layer>
        </Layers>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_DROPDOWN;
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            self:RegisterEvent("PLAYER_ENTERING_WORLD");
          </OnLoad>
          <OnEnter>
            if ( not self.isDisabled ) then
              GameTooltip:SetOwner(self, "ANCHOR_TOPRIGHT");
              GameTooltip:SetText(self.tooltip, nil, nil, nil, nil, 1);
            end
          </OnEnter>
          <OnEvent>
            ArmoryOptionsPanel_DefaultSearchTypeDropDown_OnEvent(self, event, ...);
          </OnEvent>
          <OnLeave>
            GameTooltip_Hide();
          </OnLeave>
        </Scripts>
      </Frame>
    </Frames>
  </Frame>
  
  <Frame name="ArmoryOptionsExpirationPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_EXPIRATION_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText" text="ARMORY_EXPIRATION_SUBTEXT" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_EXPIRATION_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <Slider name="$parentExpDaysSlider" inherits="ArmoryOptionsPanelSliderTemplate">
        <Size>
          <AbsDimension x="335" y="16"/>
        </Size>
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="8" y="-24"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_SLIDER;
            self.label = "ARMORY_CMD_SET_EXPDAYS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
          <OnShow>
            _G[self:GetName().."Low"]:SetText(tostring(self.minValue));
            _G[self:GetName().."High"]:SetText(tostring(self.maxValue));
          </OnShow>
          <OnValueChanged>
            self.value = value;
            self.setFunc(value);
            if ( self.value == 0 ) then
              self.text = "("..OFF..")";
            else
              self.text = format(DAYS_ABBR, floor(self.value));
            end
            self.text = Armory:Proper(ARMORY_CMD_SET_EXPDAYS_TEXT)..": "..self.text;
            _G[self:GetName().."Text"]:SetText(self.text);
          </OnValueChanged>
          <OnEnter>
            if ( not self.disabled ) then
              if ( self.tooltipText ) then
                GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
                GameTooltip:SetText(self.tooltipText, nil, nil, nil, nil, 1);
              end
              if ( self.tooltipRequirement ) then
                GameTooltip:AddLine(self.tooltipRequirement, "", 1.0, 1.0, 1.0);
                GameTooltip:Show();
              end
            end
          </OnEnter>
          <OnLeave>
            GameTooltip:Hide();
          </OnLeave>
        </Scripts>
      </Slider>
      <CheckButton name="$parentIgnoreAlts" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentExpDaysSlider" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-8" y="-24"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_IGNOREALTS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentCheckVisit" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentIgnoreAlts" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_MAILCHECKVISIT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentExcludeVisit" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentCheckVisit" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_MAILEXCLUDEVISIT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsExpirationPanelCheckVisit, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentLogonVisit" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentExcludeVisit" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_MAILHIDELOGONVISIT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsExpirationPanelCheckVisit, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentCheckCount" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentLogonVisit" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-16" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_MAILCHECKCOUNT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentHideCount" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentCheckCount" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_MAILHIDECOUNT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsExpirationPanelCheckCount, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentLogonCount" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentHideCount" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_MAILHIDELOGONCOUNT";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsExpirationPanelCheckCount, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Button name="$parentCheck" inherits="ArmoryOptionsPanelButtonTemplate" text="ARMORY_CMD_CHECK_MENUTEXT">
        <Size>
          <AbsDimension x="175" y="25"/>
        </Size>
        <Anchors>
          <Anchor point="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="16"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.tooltipText = Armory:Proper(ARMORY_CMD_CHECK_TEXT);
          </OnLoad>
          <OnClick>
            PlaySound("gsTitleOptionOK");
            Armory:CheckMailItems();
          </OnClick>
        </Scripts>
        <NormalFont style="GameFontNormalSmall"/>
        <HighlightFont style="GameFontHighlightSmall"/>
      </Button>
    </Frames>
  </Frame>

  <Frame name="ArmoryOptionsSummaryPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_SUMMARY_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText1" text="ARMORY_SUMMARY_SUBTEXT1" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText2" text="ARMORY_SUMMARY_SUBTEXT2" inherits="GameFontHighlightSmall" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="18" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentSubText1" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-105"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_SUMMARY_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <CheckButton name="$parentSummary" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText1" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWSUMMARY";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Slider name="$parentDelaySlider" inherits="ArmoryOptionsPanelSliderTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummary" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="10" y="-16"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_SLIDER;
            self.label = "ARMORY_CMD_SET_SUMMARYDELAY";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
          <OnValueChanged>
            self.value = value;
            self.setFunc(value);
          </OnValueChanged>
          <OnEnter>
            if ( not self.disabled ) then
              if ( self.tooltipText ) then
                GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
                GameTooltip:SetText(self.tooltipText, nil, nil, nil, nil, 1);
              end
              if ( self.tooltipRequirement ) then
                GameTooltip:AddLine(self.tooltipRequirement, "", 1.0, 1.0, 1.0);
                GameTooltip:Show();
              end
            end
          </OnEnter>
          <OnLeave>
            GameTooltip:Hide();
          </OnLeave>
        </Scripts>
      </Slider>
      <CheckButton name="$parentSummaryClass" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText2" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = CLASS;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryClass(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryClass(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryLevel" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryClass" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = LEVEL;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryLevel(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryLevel(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryItemLevel" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryLevel" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = ITEM_LEVEL_ABBR;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryItemLevel(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryItemLevel(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryZone" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryItemLevel" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = ZONE;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryZone(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryZone(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryXP" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryZone" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = XP;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryXP(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryXP(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryPlayed" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryXP" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = PLAYED;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryPlayed(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryPlayed(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryOnline" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryPlayed" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = LASTONLINE;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryOnline(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryOnline(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>

      <CheckButton name="$parentSummaryMoney" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText2" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="200" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = MONEY;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryMoney(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryMoney(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryCurrency" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryMoney" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = CURRENCY;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryCurrency(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryCurrency(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryQuest" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryCurrency" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = QUESTS_LABEL;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryQuest(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryQuest(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
            self.disabledFunc = function(self) return not Armory:HasQuestLog() end
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryExpiration" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryQuest" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = ARMORY_EXPIRATION_TITLE;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryExpiration(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryExpiration(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
            self.disabledFunc = function(self) return not (Armory:GetConfigExpirationDays() > 0 and Armory:HasInventory()) end
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryEvents" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryExpiration" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = EVENTS_LABEL;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryEvents(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryEvents(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
            self.disabledFunc = function(self) return not Armory:HasSocial() end
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentSummaryTradeSkills" inherits="ArmoryOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSummaryEvents" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-4"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.text = TRADESKILLS;
            self.defaultValue = true;
            self.GetValue = function(self) return Armory:GetConfigSummaryTradeSkills(); end
            self.SetValue = function(self, value) self.value = value; self:SetChecked(value); Armory:SetConfigSummaryTradeSkills(value and value ~= "0"); end
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsSummaryPanelSummary, self);
            self.disabledFunc = function(self) return not Armory:HasTradeSkills() end
          </OnLoad>
        </Scripts>
      </CheckButton>
    </Frames>
  </Frame>
  
  <Frame name="ArmoryOptionsMiscPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="ARMORY_MISC_TITLE" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
        <FontString name="$parentSubText" text="ARMORY_MISC_SUBTEXT" inherits="GameFontHighlightSmall" nonspacewrap="true" maxLines="3" justifyH="LEFT" justifyV="TOP">
          <Size>
            <AbsDimension y="32" x="0"/>
          </Size>
          <Anchors>
            <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
              <Offset>
                <AbsDimension x="0" y="-8"/>
              </Offset>
            </Anchor>
            <Anchor point="RIGHT">
              <Offset>
                <AbsDimension x="-32" y="0"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Scripts>
      <OnLoad>
        self.name = ARMORY_MISC_LABEL;
        self.parent = ARMORY_TITLE;
        ArmoryOptionsPanel_OnLoad(self);
      </OnLoad>
      <OnShow>
        ArmoryOptionsPanel_Refresh(self);
      </OnShow>
    </Scripts>
    <Frames>
      <CheckButton name="$parentLDBLabel" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSubText" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-2" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_LDBLABEL";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentEncoding" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentLDBLabel" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-8"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_USEENCODING";
            self.onOkay = ArmoryOptionsPanel_ApplyEncoding;
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentEnhancedTips" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentEncoding" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_SHOWENHANCEDTIPS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentCooldownEvents" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentEnhancedTips" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_COOLDOWNEVENTS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentCheckCooldowns" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentCooldownEvents" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="-3"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_CHECKCOOLDOWNS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsMiscPanelCooldownEvents, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentEventWarnings" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentCheckCooldowns" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-16" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_EVENTWARNINGS";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentUseEventLocalTime" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentEventWarnings" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_EVENTLOCALTIME";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentExtendedTradeSkills" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentUseEventLocalTime" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_EXTENDEDTRADE";
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentOverlay" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentExtendedTradeSkills" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-6"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_USEOVERLAY";
            self.onOkay = ArmoryOptionsPanel_ApplyOverlay;
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentMaziel" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentOverlay" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="16" y="-3"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_USEMAZIEL";
            self.onOkay = ArmoryOptionsPanel_ApplyMaziel;
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            ArmoryOptionsPanel_SetupDependentControl(ArmoryOptionsMiscPanelOverlay, self);
          </OnLoad>
        </Scripts>
      </CheckButton>
      <CheckButton name="$parentCheckButton" inherits="ArmoryOptionsWideCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentMaziel" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-3"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_CHECKBOX;
            self.label = "ARMORY_CMD_SET_CHECKBUTTON";
            self.onOkay = ArmoryOptionsPanel_ApplyCheckButton;
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
          </OnLoad>
        </Scripts>
      </CheckButton>
      <Frame name="$parentWarningSoundDropDown" inherits="ArmoryDropDownMenuTemplate" enableMouse="true">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentMaziel" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="-28" y="-54"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Layers>
          <Layer level="BACKGROUND">
            <FontString name="$parentLabel" inherits="GameFontHighlight">
              <Anchors>
                <Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT">
                  <Offset>
                    <AbsDimension x="16" y="3"/>
                  </Offset>
                </Anchor>
              </Anchors>
            </FontString>
          </Layer>
        </Layers>
        <Scripts>
          <OnLoad>
            self.type = CONTROLTYPE_DROPDOWN;
            ArmoryOptionsPanel_RegisterControl(self, self:GetParent());
            self:RegisterEvent("PLAYER_ENTERING_WORLD");
          </OnLoad>
          <OnEnter>
            if ( not self.isDisabled ) then
              GameTooltip:SetOwner(self, "ANCHOR_TOPRIGHT");
              GameTooltip:SetText(self.tooltip, nil, nil, nil, nil, 1);
            end
          </OnEnter>
          <OnEvent>
            ArmoryOptionsPanel_WarningSoundDropDown_OnEvent(self, event, ...);
          </OnEvent>
          <OnLeave>
            GameTooltip_Hide();
          </OnLeave>
        </Scripts>
      </Frame>
    </Frames>
  </Frame>
</Ui>